apiVersion: v1
kind: ConfigMap
metadata:
  name: wescale-scripts
  namespace: default
data:
  etcd-post-start.sh: |-
    #!/bin/bash
    etcd_port=${ETCD_PORT:-'2379'}
    etcd_server=${ETCD_SERVER:-'127.0.0.1'}

    cell=${CELL:-'zone1'}
    export ETCDCTL_API=2

    etcdctl --endpoints "http://127.0.0.1:${etcd_port}" get "/vitess/global" >/dev/null 2>&1
    if [[ $? -eq 1 ]]; then
      exit 0
    fi

    echo "add /vitess/global"
    etcdctl --endpoints "http://127.0.0.1:${etcd_port}" mkdir /vitess/global

    echo "add /vitess/$cell"
    etcdctl --endpoints "http://127.0.0.1:${etcd_port}" mkdir /vitess/$cell

    # And also add the CellInfo description for the cell.
    # If the node already exists, it's fine, means we used existing data.
    echo "add $cell CellInfo"
    set +e
    vtctl --topo_implementation etcd2 \
      --topo_global_server_address "127.0.0.1:${etcd_port}" \
      --topo_global_root /vitess/global VtctldCommand AddCellInfo \
      --root /vitess/$cell \
      --server-address "${etcd_server}:${etcd_port}" \
      $cell
  etcd.sh: |-
    #!/bin/bash
    echo "staring etcd."
    etcd_port=${ETCD_PORT:-'2379'}
    etcd_server=${ETCD_SERVER:-'127.0.0.1'}

    cell=${CELL:-'zone1'}
    export ETCDCTL_API=2

    etcd --enable-v2=true --data-dir "${VTDATAROOT}/etcd/"  \
      --listen-client-urls "http://0.0.0.0:${etcd_port}" \
      --advertise-client-urls "http://0.0.0.0:${etcd_port}" 2>&1 | tee "${VTDATAROOT}/etcd.log"

  vtctld.sh: |-
    #!/bin/bash    
    echo "starting vtctld"
    cell=${CELL:-'zone1'}
    grpc_port=${VTCTLD_GRPC_PORT:-'15999'}
    vtctld_web_port=${VTCTLD_WEB_PORT:-'15000'}
    topology_fags=${TOPOLOGY_FLAGS:-'--topo_implementation etcd2 --topo_global_server_address 127.0.0.1:2379 --topo_global_root /vitess/global'}

    /scripts/wait-for-service.sh etcd 127.0.0.1 2379
    
    VTDATAROOT=$VTDATAROOT/vtctld
    su vitess <<EOF
    mkdir -p $VTDATAROOT
    exec vtctld \
    $topology_fags \
    --alsologtostderr \
    --cell $cell \
    --service_map 'grpc-vtctl,grpc-vtctld' \
    --backup_storage_implementation file \
    --file_backup_storage_root $VTDATAROOT/backups \
    --log_dir $VTDATAROOT \
    --port $vtctld_web_port \
    --grpc_port $grpc_port \
    --pid_file $VTDATAROOT/vtctld.pid
    EOF
  vtgate.sh: |-
    #!/bin/bash

    cell=${CELL:-'zone1'}
    web_port=${VTGATE_WEB_PORT:-'15001'}
    grpc_port=${VTGATE_GRPC_PORT:-'15991'}
    mysql_server_port=${VTGATE_MYSQL_PORT:-'15306'}
    mysql_server_socket_path="/tmp/mysql.sock"

    echo "starting vtgate."
    su vitess <<EOF
    exec vtgate \
      $TOPOLOGY_FLAGS \
      --alsologtostderr \
      --log_dir $VTDATAROOT \
      --log_queries_to_file $VTDATAROOT/vtgate_querylog.txt \
      --port $web_port \
      --grpc_port $grpc_port \
      --mysql_server_port $mysql_server_port \
      --mysql_server_socket_path $mysql_server_socket_path \
      --cell $cell \
      --cells_to_watch $cell \
      --tablet_types_to_wait PRIMARY,REPLICA \
      --service_map 'grpc-vtgateservice' \
      --pid_file $VTDATAROOT/vtgate.pid
    EOF
  vttablet.sh: |-
    #!/bin/bash
    
    cell=${CELL:-'zone1'}
    uid="${KB_POD_NAME##*-}"
    mysql_root=${MYSQL_ROOT_USER:-'root'}
    mysql_root_passwd=${MYSQL_ROOT_PASSWORD:-'123456'}
    mysql_host=${MYSQL_HOST:-'127.0.0.1'}
    mysql_port=${MYSQL_PORT:-'3306'}
    port=${VTTABLET_PORT:-'15100'}
    grpc_port=${VTTABLET_GRPC_PORT:-'16100'}
    vtctld_host=${VTCTLD_HOST:-'127.0.0.1'}
    vtctld_web_port=${VTCTLD_WEB_PORT:-'15000'}
    tablet_hostname=$(eval echo \$KB_"$uid"_HOSTNAME)
    
    printf -v alias '%s-%010d' $cell $uid
    printf -v tablet_dir 'vt_%010d' $uid
    printf -v tablet_logfile 'vttablet_%010d_querylog.txt' $uid

    topology_fags=${TOPOLOGY_FLAGS:-'--topo_implementation etcd2 --topo_global_server_address 127.0.0.1:2379 --topo_global_root /vitess/global'}

    /scripts/wait-for-service.sh vtctld $vtctld_host $vtctld_web_port
    /scripts/wait-for-service.sh mysql $mysql_host $mysql_port

    echo "starting vttablet for $alias..."

    VTDATAROOT=$VTDATAROOT/vttablet
    su vitess <<EOF
    mkdir -p $VTDATAROOT
    
    exec vttablet \
    $topology_fags \
    --alsologtostderr \
    --log_dir $VTDATAROOT \
    --log_queries_to_file $VTDATAROOT/$tablet_logfile \
    --tablet-path $alias \
    --tablet_hostname "$tablet_hostname" \
    --init_tablet_type replica \
    --enable_replication_reporter \
    --backup_storage_implementation file \
    --file_backup_storage_root $VTDATAROOT/backups \
    --port $port \
    --db_port $mysql_port \
    --db_host $mysql_host \
    --db_allprivs_user $mysql_root \
    --db_allprivs_password $mysql_root_passwd \
    --db_dba_user $mysql_root \
    --db_dba_password $mysql_root_passwd \
    --db_app_user $mysql_root \
    --db_app_password $mysql_root_passwd \
    --db_filtered_user $mysql_root \
    --db_filtered_password $mysql_root_passwd \
    --grpc_port $grpc_port \
    --service_map 'grpc-queryservice,grpc-tabletmanager,grpc-updatestream' \
    --pid_file $VTDATAROOT/vttablet.pid \
    --vtctld_addr http://$vtctld_host:$vtctld_web_port/ \
    --disable_active_reparents
    EOF
  wait-for-service.sh: |-
    #!/bin/sh
    echo "wait for $1"
    while ! nc -z $2 $3
    do sleep 1
    printf "-"
    done
    echo -e "  >> $1 has started"
